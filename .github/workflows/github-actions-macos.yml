name: Build for MacOS
on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]
jobs:
  build-for-macos:
    runs-on: [macos-10.15] 
    strategy:
      matrix:
        os: [macos-12, macos-11, macos-10.15]
        qt_version: [6.2.2]
    env:
      executable: atomscistudio
    steps:
      - name: Install dependencies using brew
        run: |
          brew install llvm 
          brew install openssl@3
          #brew install qt
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.14.0
        with:
          version: ${{ matrix.qt_version }}
          host: 'mac'
          target: 'desktop'
          aqtversion: '==2.0.5'
          modules: 'qt3d'
      - name: Install libssh2
        run: |
          wget -c https://github.com/libssh2/libssh2/releases/download/libssh2-1.10.0/libssh2-1.10.0.tar.gz
          tar -xvf libssh2-1.10.0.tar.gz
          cmake libssh2-1.10.0 -B build_libssh2
          cmake --build build_libssh2
          cmake --install build_libssh2       
      - name: Install boost
        run: brew install boost
      - name: Install gtest
        uses: MarkusJx/googletest-installer@v1.1
      - name: Install armadillo
        run: brew install armadillo
      - name: Install atomsciflow
        run: |
          git clone https://github.com/deqitang/atomsciflow.git
          cmake atomsciflow -B build -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl@3
          cmake --build build
          cmake --install build
        shell: bash
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Build for MacOS
        run: |
          cmake -B build -DCMAKE_MACOSX_BUNDLE=True -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl@3
          cmake --build build --config Release
          cmake --install build
          cp README.md build/${executable}.app/Contents/
          cp LICENSE build/${executable}.app/Contents/
          cp NOTICE build/${executable}.app/Contents/
          mkdir -p build/${executable}.app/Contents/third_party/license
          cp third_party/license/* build/${executable}.app/Contents/third_party/license
      - name: packaging
        run: |
          macdeployqt build/${executable}.app -verbose=2 -dmg
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.executable }}-${{ matrix.os }}-${{matrix.qt_version}}.app
          path: build/${{ env.executable }}.app
      - name: Upload Release
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/${{ env.executable }}.dmg
          asset_name: ${{ env.executable }}-${{ matrix.os }}-${{ matrix.qt_version }}.dmg
          tag: ${{ github.ref }}
          overwrite: true          

